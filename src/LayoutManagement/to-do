TODO:
1. Come up with representation for graph nodes
2. Get rid of redundant classes
3. Refactor SyntaxBase with RegEx
4. Apply design patterns for graph drawing:
    - strategy pattern for layout management
    - factory pattern for graph components
5. Bottom-up search
    - ParseTree node: iNode
    - hard-code parsed game with iNodes and needed info
    - bottom-up parsing: for each LHS in the ParseTree: create graph node that stores LHS, RHS, links to other nodes
6. Layout manager
    - implement basis for fixed heuristic methods
    - recording of user interactions with graph
    - extend FDP...
7. Unit tests...
    - 100% coverage...
    - do i need gradle/maven??